{
  "stats": {
    "suites": 5,
    "tests": 36,
    "passes": 30,
    "pending": 6,
    "failures": 0,
    "start": "2024-10-29T10:05:25.282Z",
    "end": "2024-10-29T10:10:15.575Z",
    "duration": 290293,
    "testsRegistered": 36,
    "passPercent": 100,
    "pendingPercent": 16.666666666666664,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7002f40c-1198-4df6-9c1d-257d809a5ca0",
      "title": "",
      "fullFile": "C:\\Users\\Sandeep\\Desktop\\nisAndroid\\nisai-android-automation\\test\\mentorFlow.spec.js",
      "file": "\\test\\mentorFlow.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5499cdef-ef0e-4295-96b5-a01636f9475b",
          "title": "[Mentor Flow] Profile page test cases",
          "fullFile": "C:\\Users\\Sandeep\\Desktop\\nisAndroid\\nisai-android-automation\\test\\mentorFlow.spec.js",
          "file": "\\test\\mentorFlow.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"[Mentor Flow] Profile page test cases\"",
              "fullTitle": "[Mentor Flow] Profile page test cases \"before all\" hook in \"[Mentor Flow] Profile page test cases\"",
              "timedOut": false,
              "duration": 32002,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await remote(getWdOpts());\nawait driver.setTimeout({ implicit: 60000 });\nconst privacyScoller = driver.$(tAndCLocators.privacyScoller);\nawait privacyScoller.click();\nconst checkBox = await driver.$(tAndCLocators.checkBox);\nawait checkBox.click();\nawait driver.$(tAndCLocators.aageBadheButton).click();\nconst mobileNumberInputBox = await driver.$(\n  loginPageLocators.mobileNumberInputBox\n);\nawait mobileNumberInputBox.clearValue();\nawait mobileNumberInputBox.setValue(constants.mentorValidMobileNumber);\n(await driver.$(loginPageLocators.sendOtpButton)).click();\nawait driver.setTimeout({ implicit: 6000 });\nconst OTPField1 = await driver.$(loginPageLocators.otpInputBox1);\nconst OTPField2 = await driver.$(loginPageLocators.otpInputBox2);\nconst OTPField3 = await driver.$(loginPageLocators.otpInputBox3);\nconst OTPField4 = await driver.$(loginPageLocators.otpInputBox4);\nawait OTPField1.addValue(constants.defaultOtp[0]);\nawait OTPField2.addValue(constants.defaultOtp[1]);\nawait OTPField3.addValue(constants.defaultOtp[2]);\nawait OTPField4.addValue(constants.defaultOtp[3]);\nconst submitOtp = await driver.$(loginPageLocators.submitOtpButton);\nawait submitOtp.click();\nconst loggedInSuccessfully = await driver.$(\n  loginPageLocators.buttonOnLoggedInsuccessfullyPopUp\n);\nloggedInSuccessfully.click();\n// refresh on screen\nawait refreshScreenByScrollDown(driver);",
              "err": {},
              "uuid": "23f047b1-3aca-4797-85d1-e21a4cf351d7",
              "parentUUID": "5499cdef-ef0e-4295-96b5-a01636f9475b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "TF_TC1_Verify Mentor profile is logged in successfully ",
              "fullTitle": "[Mentor Flow] Profile page test cases TF_TC1_Verify Mentor profile is logged in successfully ",
              "timedOut": false,
              "duration": 4517,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const mentorProfileText = await driver.$(\n  teacherFlowLocators.teacherProfileText\n);\n// Verify the element exists\nconst isElementDisplayed = await mentorProfileText.isDisplayed();\nassert.strictEqual(isElementDisplayed, true, \"Element is not displayed\");",
              "err": {},
              "uuid": "14a465bb-2c6f-4ee9-ba02-14e628b09353",
              "parentUUID": "5499cdef-ef0e-4295-96b5-a01636f9475b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TF_TC2_Verify Nipun Lakshya app title is visible in header on mentor profile page",
              "fullTitle": "[Mentor Flow] Profile page test cases TF_TC2_Verify Nipun Lakshya app title is visible in header on mentor profile page",
              "timedOut": false,
              "duration": 353,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const appName = await driver.$(teacherFlowLocators.nipunLakshyaAppTitle);\n// Verify the element exists\nconst isElementDisplayed = await appName.isDisplayed();\nassert.strictEqual(isElementDisplayed, true, \"Element is not displayed\");\nconst text = await appName.getText();\nassert.strictEqual(\n  text,\n  constants.nipunLakshyaAppTitle,\n  `Element text is not ${constants.nipunLakshyaAppTitle}, it is '${text}'`\n);",
              "err": {},
              "uuid": "dbe92065-528d-4450-a073-feb82f6d946d",
              "parentUUID": "5499cdef-ef0e-4295-96b5-a01636f9475b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TF_TC3_Verify app version is displayed in header",
              "fullTitle": "[Mentor Flow] Profile page test cases TF_TC3_Verify app version is displayed in header",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "39d20d7f-3215-4c53-ac07-4fa5d7ffaa71",
              "parentUUID": "5499cdef-ef0e-4295-96b5-a01636f9475b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TF_TC4_Verify chatbot icon is visible",
              "fullTitle": "[Mentor Flow] Profile page test cases TF_TC4_Verify chatbot icon is visible",
              "timedOut": false,
              "duration": 239,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const chatbotIcon = await driver.$(teacherFlowLocators.chatbotIcon);\nconst isElementDisplayed = await chatbotIcon.isDisplayed();\nassert.strictEqual(isElementDisplayed, true, \"Element is not displayed\");",
              "err": {},
              "uuid": "23cc9648-6ae3-4918-b6f5-7f8a58c159a3",
              "parentUUID": "5499cdef-ef0e-4295-96b5-a01636f9475b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TF_TC5_Verify mentor profile details are visible (name,district,udise,block)",
              "fullTitle": "[Mentor Flow] Profile page test cases TF_TC5_Verify mentor profile details are visible (name,district,udise,block)",
              "timedOut": false,
              "duration": 1350,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// name\nconst nameText = await driver.$(teacherFlowLocators.teacherName);\nconst isNameDisplayed = await nameText.isDisplayed();\nassert.strictEqual(isNameDisplayed, true, \"Element is not displayed\");\nconst nametext = await nameText.getText();\nassert.strictEqual(\n  nametext,\n  constants.mentornameText,\n  `Element text is not ${constants.mentornameText}, it is '${nametext}'`\n);\n//udise\nawait driver.setTimeout({ implicit: 20000 });\nconst udise = await driver.$(teacherFlowLocators.udise);\nconst isUdiseDisplayed = await udise.isDisplayed();\nassert.strictEqual(isUdiseDisplayed, true, \"Element is not displayed\");\nconst udisetext = await udise.getText();\nassert.strictEqual(\n  udisetext,\n  constants.mentorUdiseText,\n  `Element text is not ${constants.mentorUdiseText}, it is '${udisetext}'`\n);\n// district\nconst district = await driver.$(teacherFlowLocators.district);\nconst isDistrictDisplayed = await district.isDisplayed();\nassert.strictEqual(isDistrictDisplayed, true, \"Element is not displayed\");\nconst districtText = await district.getText();\nassert.strictEqual(\n  districtText,\n  constants.mentorDistrictText,\n  `Element text is not ${constants.mentorDistrictText}, it is '${districtText}'`\n);\n//Block\nconst block = await driver.$(teacherFlowLocators.block);\nconst isBlockDisplayed = await block.isDisplayed();\nassert.strictEqual(isBlockDisplayed, true, \"Element is not displayed\");\nconst blockText = await block.getText();\nassert.strictEqual(\n  blockText,\n  constants.mentorBlockText,\n  `Element text is not ${constants.mentorBlockText}, it is '${blockText}'`\n);",
              "err": {},
              "uuid": "b78d48d0-fa79-42a7-8320-821a1cf697bc",
              "parentUUID": "5499cdef-ef0e-4295-96b5-a01636f9475b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TF_TC6_Verify Shikshak Aklan Saransh label text is visible.",
              "fullTitle": "[Mentor Flow] Profile page test cases TF_TC6_Verify Shikshak Aklan Saransh label text is visible.",
              "timedOut": false,
              "duration": 290,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const teacherAnkalanSaransh = await driver.$(\n  teacherFlowLocators.teacherAnkalanSaransh\n);\nconst isElementDisplayed = await teacherAnkalanSaransh.isDisplayed();\nassert.strictEqual(isElementDisplayed, true, \"Element is not displayed\");\nconst teacherAnkalanSaranshText = await teacherAnkalanSaransh.getText();\nassert.strictEqual(\n  teacherAnkalanSaranshText,\n  constants.teacherAnkalanSaranshText,\n  `Element text is not ${constants.teacherAnkalanSaranshText}, it is '${teacherAnkalanSaranshText}'`\n);",
              "err": {},
              "uuid": "6baa6740-befd-43d4-8ce0-cbef675d10f4",
              "parentUUID": "5499cdef-ef0e-4295-96b5-a01636f9475b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TF_TC7_Verify vartman sapata aklan text is visible ",
              "fullTitle": "[Mentor Flow] Profile page test cases TF_TC7_Verify vartman sapata aklan text is visible ",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "c8dd9f3a-3192-461e-b0c1-6f4ec8ba3e59",
              "parentUUID": "5499cdef-ef0e-4295-96b5-a01636f9475b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TF_TC8_Verify count of student assessed in week text and count is visible",
              "fullTitle": "[Mentor Flow] Profile page test cases TF_TC8_Verify count of student assessed in week text and count is visible",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "839c5567-626b-4397-9a6a-c7ec3eb4ad03",
              "parentUUID": "5499cdef-ef0e-4295-96b5-a01636f9475b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TF_TC9_Verify count of student nipun in week text and count is visible",
              "fullTitle": "[Mentor Flow] Profile page test cases TF_TC9_Verify count of student nipun in week text and count is visible",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "2322e54e-8ccb-4328-b02b-c8e5a7993fa6",
              "parentUUID": "5499cdef-ef0e-4295-96b5-a01636f9475b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TF_TC10_Verify count of student assessed count is visible",
              "fullTitle": "[Mentor Flow] Profile page test cases TF_TC10_Verify count of student assessed count is visible",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "722d1424-8137-419f-8045-3e998b58551e",
              "parentUUID": "5499cdef-ef0e-4295-96b5-a01636f9475b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TF_TC11_Verify count of student nipun in month text and count is visible",
              "fullTitle": "[Mentor Flow] Profile page test cases TF_TC11_Verify count of student nipun in month text and count is visible",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "86c38a48-440d-43b9-b501-b1f5e6707e73",
              "parentUUID": "5499cdef-ef0e-4295-96b5-a01636f9475b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TF_TC12_Verify mentor akalan text is visible",
              "fullTitle": "[Mentor Flow] Profile page test cases TF_TC12_Verify mentor akalan text is visible",
              "timedOut": false,
              "duration": 356,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const mentorAklanText = await driver.$(\n  teacherFlowLocators.teacherAnkalanSaransh\n);\nconst mentorAklanTextElement = await mentorAklanText.isDisplayed();\nassert.strictEqual(\n  mentorAklanTextElement,\n  true,\n  \"Element is not displayed\"\n);\nconst mentorAklanElementText = await mentorAklanText.getText();\nassert.strictEqual(\n  mentorAklanElementText,\n  constants.teacherAnkalanSaranshText,\n  `Element text is not ${constants.teacherAnkalanSaranshText}, it is '${mentorAklanElementText}'`\n);",
              "err": {},
              "uuid": "f7117bab-6d2a-4133-8bc3-dc4c75e8941f",
              "parentUUID": "5499cdef-ef0e-4295-96b5-a01636f9475b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "6c9451f8-6d88-475e-a9d4-7e4a721d3cdd",
              "title": "[Mentor Flow] School summary page",
              "fullFile": "C:\\Users\\Sandeep\\Desktop\\nisAndroid\\nisai-android-automation\\test\\mentorFlow.spec.js",
              "file": "\\test\\mentorFlow.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "TF_TC13_Verify able to see grade 1,2,3 and all grade buttons and it is clickable",
                  "fullTitle": "[Mentor Flow] Profile page test cases [Mentor Flow] School summary page TF_TC13_Verify able to see grade 1,2,3 and all grade buttons and it is clickable",
                  "timedOut": false,
                  "duration": 2638,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//grade 1\nconst grade1Label = await driver.$(teacherFlowLocators.grade1Label);\nconst grade1LabelisDisplayed = await grade1Label.isDisplayed();\nassert.strictEqual(grade1LabelisDisplayed, true, \"Element is not displayed\");\nconst textGrade1Label = await grade1Label.getText();\nassert.strictEqual(\n  textGrade1Label,\n  constants.grade1LabelText,\n  `Element text is not ${constants.grade1LabelText}, it is '${textGrade1Label}'`\n);\nawait grade1Label.click();\n//grade 2\nconst grade2Label = await driver.$(teacherFlowLocators.grade2Label);\nconst grade2LabelisDisplayed = await grade2Label.isDisplayed();\nassert.strictEqual(grade2LabelisDisplayed, true, \"Element is not displayed\");\nconst textGrade2Label = await grade2Label.getText();\nassert.strictEqual(\n  textGrade2Label,\n  constants.grade2LabelText,\n  `Element text is not ${constants.grade2LabelText}, it is '${textGrade2Label}'`\n);\nawait grade2Label.click();\n\n//grade 3\n  //   const grade3Label = await driver.$(teacherFlowLocators.grade3Label);\n  //   const grade3LabelisDisplayed = await grade3Label.isDisplayed();\n  //   assert.strictEqual(grade3LabelisDisplayed, true, \"Element is not displayed\");\n  //   const textGrade3Label = await grade3Label.getText();\n  //   assert.strictEqual(\n  //     textGrade3Label,\n  //     constants.grade3LabelText,\n  //     `Element text is not ${constants.grade3LabelText}, it is '${textGrade3Label}'`\n  //   );",
                  "err": {},
                  "uuid": "7a5f8c40-e05a-471d-82d1-a5f205a7528f",
                  "parentUUID": "6c9451f8-6d88-475e-a9d4-7e4a721d3cdd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TF_TC14_Verify choose School page displayed on page after clicking on ankalan page",
                  "fullTitle": "[Mentor Flow] Profile page test cases [Mentor Flow] School summary page TF_TC14_Verify choose School page displayed on page after clicking on ankalan page",
                  "timedOut": false,
                  "duration": 1749,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.$(teacherFlowLocators.studentAkalanButton).click();\nconst chooseSchoolPage = await driver.$(teacherFlowLocators.chooseScholTitle);\n  const chooseSchoolPageDisplayed = await chooseSchoolPage.isDisplayed();\n  assert.strictEqual(chooseSchoolPageDisplayed, true, \"Element is not displayed\");",
                  "err": {},
                  "uuid": "fa963031-95f7-4213-9031-c65c7cee2e43",
                  "parentUUID": "6c9451f8-6d88-475e-a9d4-7e4a721d3cdd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TF_TC15_Verify filter for UDISE, Block and panchayat should be visible and clickable",
                  "fullTitle": "[Mentor Flow] Profile page test cases [Mentor Flow] School summary page TF_TC15_Verify filter for UDISE, Block and panchayat should be visible and clickable",
                  "timedOut": false,
                  "duration": 7148,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const janpadLabel = await driver.$(teacherFlowLocators.FilterScholJanpad);\nconst janpadLabelisDisplayed = await janpadLabel.isDisplayed();\nassert.strictEqual(janpadLabelisDisplayed, true, \"Element is not displayed\");\nawait driver.$(teacherFlowLocators.FilterScholJanpadSelect).click();\nawait driver.$(teacherFlowLocators.FilterOptionList).click();\n//block label\nconst blockLabel = await driver.$(teacherFlowLocators.FilterScholBlock);\nconst blockLabelisDisplayed = await janpadLabel.isDisplayed();\nassert.strictEqual(blockLabelisDisplayed, true, \"Element is not displayed\");\nawait driver.$(teacherFlowLocators.FilterScholBlockSelect).click();\nawait driver.$(teacherFlowLocators.FilterOptionList).click();\n//Panchayat label\nconst panchayatLabel = await driver.$(teacherFlowLocators.FilterScholPanchayat);\nconst panchayatLabelisDisplayed = await panchayatLabel.isDisplayed();\nassert.strictEqual(panchayatLabelisDisplayed, true, \"Element is not displayed\");\nawait driver.$(teacherFlowLocators.FilterScholPanchayatSelect).click();\nawait driver.$(teacherFlowLocators.FilterOptionList).click();",
                  "err": {},
                  "uuid": "d99c5608-c11e-4172-87bd-a48d88864046",
                  "parentUUID": "6c9451f8-6d88-475e-a9d4-7e4a721d3cdd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TF_TC16_Verify By UDISE search Filter",
                  "fullTitle": "[Mentor Flow] Profile page test cases [Mentor Flow] School summary page TF_TC16_Verify By UDISE search Filter",
                  "timedOut": false,
                  "duration": 1069,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const UdiseTabSearch = await driver.$(teacherFlowLocators.SearchUDISENo);\nconst UdiseTabSearchisDisplayed = await UdiseTabSearch.isDisplayed();\nassert.strictEqual(UdiseTabSearchisDisplayed, true, \"Search tab is not displayed\");\nawait UdiseTabSearch.addValue(constants.udisefortest);",
                  "err": {},
                  "uuid": "ea353a6c-bb68-4446-a147-8d47a31a3743",
                  "parentUUID": "6c9451f8-6d88-475e-a9d4-7e4a721d3cdd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7a5f8c40-e05a-471d-82d1-a5f205a7528f",
                "fa963031-95f7-4213-9031-c65c7cee2e43",
                "d99c5608-c11e-4172-87bd-a48d88864046",
                "ea353a6c-bb68-4446-a147-8d47a31a3743"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 12604,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "3dafb43c-0405-4730-9d6f-d289b14327c8",
              "title": "[Mentor Flow] Student listing page",
              "fullFile": "C:\\Users\\Sandeep\\Desktop\\nisAndroid\\nisai-android-automation\\test\\mentorFlow.spec.js",
              "file": "\\test\\mentorFlow.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"[Mentor Flow] Student listing page\"",
                  "fullTitle": "[Mentor Flow] Profile page test cases [Mentor Flow] Student listing page \"before all\" hook in \"[Mentor Flow] Student listing page\"",
                  "timedOut": false,
                  "duration": 1236,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// refresh on screen\nawait driver.$(teacherFlowLocators.selectSearchSchoolforAssesment).click();",
                  "err": {},
                  "uuid": "169305b9-70c9-4d91-8a40-ae6b6a3061fb",
                  "parentUUID": "3dafb43c-0405-4730-9d6f-d289b14327c8",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook in \"[Mentor Flow] Student listing page\"",
                  "fullTitle": "[Mentor Flow] Profile page test cases [Mentor Flow] Student listing page \"after all\" hook in \"[Mentor Flow] Student listing page\"",
                  "timedOut": false,
                  "duration": 224,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "if (driver) {\n  await driver.$(teacherFlowLocators.studentListingToHomePageBackButton).click();\n}",
                  "err": {},
                  "uuid": "2f730f56-9e7f-4a89-9026-5e42dee465b6",
                  "parentUUID": "3dafb43c-0405-4730-9d6f-d289b14327c8",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "TF_TC17_Verify clicking on vidhyarthi akalan button landed on student listing page ",
                  "fullTitle": "[Mentor Flow] Profile page test cases [Mentor Flow] Student listing page TF_TC17_Verify clicking on vidhyarthi akalan button landed on student listing page ",
                  "timedOut": false,
                  "duration": 1745,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const selectGradeElement = await driver.$(teacherFlowLocators.selectGradeTextElement);\nconst isDisplayed = await selectGradeElement.isDisplayed();\nassert.strictEqual(isDisplayed, true, \"Element is not displayed\");\nconst text = await selectGradeElement.getText();\nassert.strictEqual(\n  text,\n  constants.selectGradeText,\n  `Element text is not ${constants.selectGradeText}, it is '${text}'`\n);",
                  "err": {},
                  "uuid": "279cb304-5854-4337-92f4-68b1f3932299",
                  "parentUUID": "3dafb43c-0405-4730-9d6f-d289b14327c8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TF_TC18_Verify able to see grade 1,2,3 and all grade buttons and it is clickable",
                  "fullTitle": "[Mentor Flow] Profile page test cases [Mentor Flow] Student listing page TF_TC18_Verify able to see grade 1,2,3 and all grade buttons and it is clickable",
                  "timedOut": false,
                  "duration": 4180,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//grade 1\nconst grade1Label = await driver.$(teacherFlowLocators.grade1Label);\nawait grade1Label.click();\nconst grade1LabelisDisplayed = await grade1Label.isDisplayed();\nassert.strictEqual(grade1LabelisDisplayed, true, \"Element is not displayed\");\nconst textGrade1Label = await grade1Label.getText();\nassert.strictEqual(\n  textGrade1Label,\n  constants.grade1LabelText,\n  `Element text is not ${constants.grade1LabelText}, it is '${textGrade1Label}'`\n);\n//grade 2\nconst grade2Label = await driver.$(teacherFlowLocators.grade2Label);\nawait grade2Label.click();\nconst grade2LabelisDisplayed = await grade2Label.isDisplayed();\nassert.strictEqual(grade2LabelisDisplayed, true, \"Element is not displayed\");\nconst textGrade2Label = await grade2Label.getText();\nassert.strictEqual(\n  textGrade2Label,\n  constants.grade2LabelText,\n  `Element text is not ${constants.grade2LabelText}, it is '${textGrade2Label}'`\n);\n// await grade2Label.click();\n\n//grade 3\nconst grade3Label = await driver.$(teacherFlowLocators.grade3Label);\nawait grade3Label.click();\nconst grade3LabelisDisplayed = await grade3Label.isDisplayed();\nassert.strictEqual(grade3LabelisDisplayed, true, \"Element is not displayed\");\nconst textGrade3Label = await grade3Label.getText();\nassert.strictEqual(\n  textGrade3Label,\n  constants.grade3LabelText,\n  `Element text is not ${constants.grade3LabelText}, it is '${textGrade3Label}'`\n);",
                  "err": {},
                  "uuid": "ba63eafe-b16e-4f6d-904c-623aa5c8a377",
                  "parentUUID": "3dafb43c-0405-4730-9d6f-d289b14327c8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TF_TC19_Verify able to see list of the students when grade 1 is selected",
                  "fullTitle": "[Mentor Flow] Profile page test cases [Mentor Flow] Student listing page TF_TC19_Verify able to see list of the students when grade 1 is selected",
                  "timedOut": false,
                  "duration": 1332,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.$(teacherFlowLocators.grade1Label).click();\nconst studentCards = await driver.$(teacherFlowLocators.firstStudentCard)\nconst isDisplayed = await studentCards.isDisplayed();\nassert.strictEqual(isDisplayed, true, \"Element is not displayed\");",
                  "err": {},
                  "uuid": "9f750543-fd1c-481b-bf9d-9d54f19b4cea",
                  "parentUUID": "3dafb43c-0405-4730-9d6f-d289b14327c8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TF_TC20_Verify able to see list of the students when grade 2 is selected",
                  "fullTitle": "[Mentor Flow] Profile page test cases [Mentor Flow] Student listing page TF_TC20_Verify able to see list of the students when grade 2 is selected",
                  "timedOut": false,
                  "duration": 1974,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.$(teacherFlowLocators.grade2Label).click();\nconst studentCards = await driver.$(teacherFlowLocators.firstStudentCard)\nconst isDisplayed = await studentCards.isDisplayed();\nassert.strictEqual(isDisplayed, true, \"Element is not displayed\");",
                  "err": {},
                  "uuid": "bdbf8230-5196-44c8-a01a-e681bf215650",
                  "parentUUID": "3dafb43c-0405-4730-9d6f-d289b14327c8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TF_TC21_Verify able to see list of the students when grade 3 is selected",
                  "fullTitle": "[Mentor Flow] Profile page test cases [Mentor Flow] Student listing page TF_TC21_Verify able to see list of the students when grade 3 is selected",
                  "timedOut": false,
                  "duration": 1658,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.$(teacherFlowLocators.grade3Label).click();\nconst studentCards = await driver.$(teacherFlowLocators.firstStudentCard)\nconst isDisplayed = await studentCards.isDisplayed();\nassert.strictEqual(isDisplayed, true, \"Element is not displayed\");",
                  "err": {},
                  "uuid": "022981e3-a73a-4d4f-8338-0ff237c7a5d0",
                  "parentUUID": "3dafb43c-0405-4730-9d6f-d289b14327c8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TF_TC22_Verify able to see Student name and akalan kare button.",
                  "fullTitle": "[Mentor Flow] Profile page test cases [Mentor Flow] Student listing page TF_TC22_Verify able to see Student name and akalan kare button.",
                  "timedOut": false,
                  "duration": 1865,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.$(teacherFlowLocators.grade1Label).click();\n//student name\nconst studentName = await driver.$(teacherFlowLocators.studentName)\nconst studentNameIsDisplayed = await studentName.isDisplayed();\nassert.strictEqual(studentNameIsDisplayed, true, \"Element is not displayed\");\n\n//aakalan kare button \nconst takeAssessmentButton = await driver.$(teacherFlowLocators.takeAssessmentButton)\nconst takeAssessmentButtonIsDisplayed = await takeAssessmentButton.isDisplayed();\nassert.strictEqual(takeAssessmentButtonIsDisplayed, true, \"Element is not displayed\");",
                  "err": {},
                  "uuid": "c5abd4e5-edba-4de7-b95e-182b71fd98f7",
                  "parentUUID": "3dafb43c-0405-4730-9d6f-d289b14327c8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TF_TC23_Verify nipun,not nipun,pending text is visible when grade 1 is selected. ",
                  "fullTitle": "[Mentor Flow] Profile page test cases [Mentor Flow] Student listing page TF_TC23_Verify nipun,not nipun,pending text is visible when grade 1 is selected. ",
                  "timedOut": false,
                  "duration": 2677,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.$(teacherFlowLocators.grade1Label).click(); \n//nipun text\nconst nipunText = await driver.$(teacherFlowLocators.nipunTextElement)\nconst nipunTextIsDisplayed = await nipunText.isDisplayed();\nassert.strictEqual(nipunTextIsDisplayed, true, \"Element is not displayed\");\nconst text = await nipunText.getText();\nassert.strictEqual(\n  text,\n  constants.nipunText,\n  `Element text is not ${constants.nipunText}, it is '${text}'`\n);\n   //nipun count \nconst nipunCount = await driver.$(teacherFlowLocators.nipunCount)\nconst nipunCountIsDisplayed = await nipunCount.isDisplayed();\nassert.strictEqual(nipunCountIsDisplayed, true, \"Element is not displayed\");\n  //Not nipun text \nconst notNipunText = await driver.$(teacherFlowLocators.notNipunTextElement)\nconst notNipunTextIsDisplayed = await notNipunText.isDisplayed();\nassert.strictEqual(notNipunTextIsDisplayed, true, \"Element is not displayed\");\nconst notNipunTexts = await notNipunText.getText();\nassert.strictEqual(\nnotNipunTexts,\nconstants.notNipunText,\n`Element text is not ${constants.notNipunText}, it is '${notNipunTexts}'`\n);\n//Not nipun count\nconst notNipunCount = await driver.$(teacherFlowLocators.notNipunCount)\nconst notNipunCountIsDisplayed = await notNipunCount.isDisplayed();\nassert.strictEqual(notNipunCountIsDisplayed, true, \"Element is not displayed\");\n// to be assess text\nconst pendingAssessmentTextElement = await driver.$(teacherFlowLocators.pendingAssessmentText)\nconst pendingAssessmentTextIsDisplayed = await pendingAssessmentTextElement.isDisplayed();\nassert.strictEqual(pendingAssessmentTextIsDisplayed, true, \"Element is not displayed\");\nconst pendingAssessmentTextElementText = await pendingAssessmentTextElement.getText();\nassert.strictEqual(\n  pendingAssessmentTextElementText,\n  constants.penddingToAssess,\n  `Element text is not ${constants.penddingToAssess}, it is '${pendingAssessmentTextElementText}'`\n);\n// to be assess count\nconst toBeAssessCount = await driver.$(teacherFlowLocators.pendingAssessmentCount)\nconst toBeAssessCountIsDisplayed = await toBeAssessCount.isDisplayed();\nassert.strictEqual(toBeAssessCountIsDisplayed, true, \"Element is not displayed\");",
                  "err": {},
                  "uuid": "2d8f240f-4b78-4378-8e51-b685f16705a4",
                  "parentUUID": "3dafb43c-0405-4730-9d6f-d289b14327c8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TF_TC24_Verify nipun,not nipun,pending text is visible when grade 2 is selected. ",
                  "fullTitle": "[Mentor Flow] Profile page test cases [Mentor Flow] Student listing page TF_TC24_Verify nipun,not nipun,pending text is visible when grade 2 is selected. ",
                  "timedOut": false,
                  "duration": 2912,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.$(teacherFlowLocators.grade2Label).click(); \n//nipun text\nconst nipunText = await driver.$(teacherFlowLocators.nipunTextElement)\nconst nipunTextIsDisplayed = await nipunText.isDisplayed();\nassert.strictEqual(nipunTextIsDisplayed, true, \"Element is not displayed\");\nconst text = await nipunText.getText();\nassert.strictEqual(\n  text,\n  constants.nipunText,\n  `Element text is not ${constants.nipunText}, it is '${text}'`\n);\n   //nipun count \nconst nipunCount = await driver.$(teacherFlowLocators.nipunCount)\nconst nipunCountIsDisplayed = await nipunCount.isDisplayed();\nassert.strictEqual(nipunCountIsDisplayed, true, \"Element is not displayed\");\n  //Not nipun text \nconst notNipunText = await driver.$(teacherFlowLocators.notNipunTextElement)\nconst notNipunTextIsDisplayed = await notNipunText.isDisplayed();\nassert.strictEqual(notNipunTextIsDisplayed, true, \"Element is not displayed\");\nconst notNipunTexts = await notNipunText.getText();\nassert.strictEqual(\nnotNipunTexts,\nconstants.notNipunText,\n`Element text is not ${constants.notNipunText}, it is '${notNipunTexts}'`\n);\n//Not nipun count\nconst notNipunCount = await driver.$(teacherFlowLocators.notNipunCount)\nconst notNipunCountIsDisplayed = await notNipunCount.isDisplayed();\nassert.strictEqual(notNipunCountIsDisplayed, true, \"Element is not displayed\");\n// to be assess text\nconst pendingAssessmentTextElement = await driver.$(teacherFlowLocators.pendingAssessmentText)\nconst pendingAssessmentTextIsDisplayed = await pendingAssessmentTextElement.isDisplayed();\nassert.strictEqual(pendingAssessmentTextIsDisplayed, true, \"Element is not displayed\");\nconst pendingAssessmentTextElementText = await pendingAssessmentTextElement.getText();\nassert.strictEqual(\n  pendingAssessmentTextElementText,\n  constants.penddingToAssess,\n  `Element text is not ${constants.penddingToAssess}, it is '${pendingAssessmentTextElementText}'`\n);\n// to be assess count\nconst toBeAssessCount = await driver.$(teacherFlowLocators.pendingAssessmentCount)\nconst toBeAssessCountIsDisplayed = await toBeAssessCount.isDisplayed();\nassert.strictEqual(toBeAssessCountIsDisplayed, true, \"Element is not displayed\");",
                  "err": {},
                  "uuid": "871208e8-e320-47b9-a4e5-4510e66a6cf3",
                  "parentUUID": "3dafb43c-0405-4730-9d6f-d289b14327c8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TF_TC25_Verify nipun,not nipun,pending text is visible when grade 3 is selected. ",
                  "fullTitle": "[Mentor Flow] Profile page test cases [Mentor Flow] Student listing page TF_TC25_Verify nipun,not nipun,pending text is visible when grade 3 is selected. ",
                  "timedOut": false,
                  "duration": 3359,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.$(teacherFlowLocators.grade3Label).click(); \n//nipun text\nconst nipunText = await driver.$(teacherFlowLocators.nipunTextElement)\nconst nipunTextIsDisplayed = await nipunText.isDisplayed();\nassert.strictEqual(nipunTextIsDisplayed, true, \"Element is not displayed\");\nconst text = await nipunText.getText();\nassert.strictEqual(\n  text,\n  constants.nipunText,\n  `Element text is not ${constants.nipunText}, it is '${text}'`\n);\n   //nipun count \nconst nipunCount = await driver.$(teacherFlowLocators.nipunCount)\nconst nipunCountIsDisplayed = await nipunCount.isDisplayed();\nassert.strictEqual(nipunCountIsDisplayed, true, \"Element is not displayed\");\n  //Not nipun text \nconst notNipunText = await driver.$(teacherFlowLocators.notNipunTextElement)\nconst notNipunTextIsDisplayed = await notNipunText.isDisplayed();\nassert.strictEqual(notNipunTextIsDisplayed, true, \"Element is not displayed\");\nconst notNipunTexts = await notNipunText.getText();\nassert.strictEqual(\nnotNipunTexts,\nconstants.notNipunText,\n`Element text is not ${constants.notNipunText}, it is '${notNipunTexts}'`\n);\n//Not nipun count\nconst notNipunCount = await driver.$(teacherFlowLocators.notNipunCount)\nconst notNipunCountIsDisplayed = await notNipunCount.isDisplayed();\nassert.strictEqual(notNipunCountIsDisplayed, true, \"Element is not displayed\");\n// to be assess text\nconst pendingAssessmentTextElement = await driver.$(teacherFlowLocators.pendingAssessmentText)\nconst pendingAssessmentTextIsDisplayed = await pendingAssessmentTextElement.isDisplayed();\nassert.strictEqual(pendingAssessmentTextIsDisplayed, true, \"Element is not displayed\");\nconst pendingAssessmentTextElementText = await pendingAssessmentTextElement.getText();\nassert.strictEqual(\n  pendingAssessmentTextElementText,\n  constants.penddingToAssess,\n  `Element text is not ${constants.penddingToAssess}, it is '${pendingAssessmentTextElementText}'`\n);\n// to be assess count\nconst toBeAssessCount = await driver.$(teacherFlowLocators.pendingAssessmentCount)\nconst toBeAssessCountIsDisplayed = await toBeAssessCount.isDisplayed();\nassert.strictEqual(toBeAssessCountIsDisplayed, true, \"Element is not displayed\");",
                  "err": {},
                  "uuid": "97f03846-93a3-4371-ba3d-e7a36cf1562d",
                  "parentUUID": "3dafb43c-0405-4730-9d6f-d289b14327c8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TF_TC26_Verify able see month on student listing page",
                  "fullTitle": "[Mentor Flow] Profile page test cases [Mentor Flow] Student listing page TF_TC26_Verify able see month on student listing page",
                  "timedOut": false,
                  "duration": 1299,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.$(teacherFlowLocators.grade1Label).click(); \nconst monthText= await driver.$(teacherFlowLocators.monthText)\nconst IsDisplayed = await monthText.isDisplayed();\nassert.strictEqual(IsDisplayed, true, \"Element is not displayed\");",
                  "err": {},
                  "uuid": "4d769885-f0e7-42e7-a8a2-0915f70b13ba",
                  "parentUUID": "3dafb43c-0405-4730-9d6f-d289b14327c8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TF_TC27_Verify able see refresh button on student listing page and its working ",
                  "fullTitle": "[Mentor Flow] Profile page test cases [Mentor Flow] Student listing page TF_TC27_Verify able see refresh button on student listing page and its working ",
                  "timedOut": false,
                  "duration": 6080,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.$(teacherFlowLocators.grade1Label).click(); \nawait driver.$(teacherFlowLocators.refreshButton).click();\nawait driver.$(teacherFlowLocators.grade2Label).click(); \nawait driver.$(teacherFlowLocators.refreshButton).click();\nawait driver.$(teacherFlowLocators.grade3Label).click(); \nawait driver.$(teacherFlowLocators.refreshButton).click();",
                  "err": {},
                  "uuid": "c44a608b-4cf0-4327-bf13-e0384ee72c24",
                  "parentUUID": "3dafb43c-0405-4730-9d6f-d289b14327c8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TF_TC28_Verify able to change month to see previous months student assessed history when grade 1 is selected",
                  "fullTitle": "[Mentor Flow] Profile page test cases [Mentor Flow] Student listing page TF_TC28_Verify able to change month to see previous months student assessed history when grade 1 is selected",
                  "timedOut": false,
                  "duration": 7356,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.$(teacherFlowLocators.grade1Label).click(); \n// previous 3 months\nawait driver.$(teacherFlowLocators.previousMonth).click();\nconst monthText= await driver.$(teacherFlowLocators.monthText)\nconst IsDisplayed = await monthText.isDisplayed();\nassert.strictEqual(IsDisplayed, true, \"Element is not displayed\");\nawait driver.$(teacherFlowLocators.previousMonth).click();\nassert.strictEqual(IsDisplayed, true, \"Element is not displayed\");\nawait driver.$(teacherFlowLocators.previousMonth).click();\nassert.strictEqual(IsDisplayed, true, \"Element is not displayed\");\n// back to current month \nawait driver.$(teacherFlowLocators.nextMonth).click();\nassert.strictEqual(IsDisplayed, true, \"Element is not displayed\");\nawait driver.$(teacherFlowLocators.nextMonth).click();\nassert.strictEqual(IsDisplayed, true, \"Element is not displayed\");\nawait driver.$(teacherFlowLocators.nextMonth).click();\nassert.strictEqual(IsDisplayed, true, \"Element is not displayed\");",
                  "err": {},
                  "uuid": "9df0ab5a-7f6f-4b00-9f38-80e17628b865",
                  "parentUUID": "3dafb43c-0405-4730-9d6f-d289b14327c8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TF_TC29_Verify able to change month to see previous months student assessed history when grade 2 is selected",
                  "fullTitle": "[Mentor Flow] Profile page test cases [Mentor Flow] Student listing page TF_TC29_Verify able to change month to see previous months student assessed history when grade 2 is selected",
                  "timedOut": false,
                  "duration": 8167,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.$(teacherFlowLocators.grade2Label).click(); \n// previous 3 months\nawait driver.$(teacherFlowLocators.previousMonth).click();\nconst monthText= await driver.$(teacherFlowLocators.monthText)\nconst IsDisplayed = await monthText.isDisplayed();\nassert.strictEqual(IsDisplayed, true, \"Element is not displayed\");\nawait driver.$(teacherFlowLocators.previousMonth).click();\nassert.strictEqual(IsDisplayed, true, \"Element is not displayed\");\nawait driver.$(teacherFlowLocators.previousMonth).click();\nassert.strictEqual(IsDisplayed, true, \"Element is not displayed\");\n// back to current month \nawait driver.$(teacherFlowLocators.nextMonth).click();\nassert.strictEqual(IsDisplayed, true, \"Element is not displayed\");\nawait driver.$(teacherFlowLocators.nextMonth).click();\nassert.strictEqual(IsDisplayed, true, \"Element is not displayed\");\nawait driver.$(teacherFlowLocators.nextMonth).click();\nassert.strictEqual(IsDisplayed, true, \"Element is not displayed\");",
                  "err": {},
                  "uuid": "3e90a8e8-581b-4eb0-8e4c-c357422e1940",
                  "parentUUID": "3dafb43c-0405-4730-9d6f-d289b14327c8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TF_TC30_Verify able to change month to see previous months student assessed history when grade 3 is selected",
                  "fullTitle": "[Mentor Flow] Profile page test cases [Mentor Flow] Student listing page TF_TC30_Verify able to change month to see previous months student assessed history when grade 3 is selected",
                  "timedOut": false,
                  "duration": 7861,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.$(teacherFlowLocators.grade3Label).click(); \n// previous 3 months\nawait driver.$(teacherFlowLocators.previousMonth).click();\nconst monthText= await driver.$(teacherFlowLocators.monthText)\nconst IsDisplayed = await monthText.isDisplayed();\nassert.strictEqual(IsDisplayed, true, \"Element is not displayed\");\nawait driver.$(teacherFlowLocators.previousMonth).click();\nassert.strictEqual(IsDisplayed, true, \"Element is not displayed\");\nawait driver.$(teacherFlowLocators.previousMonth).click();\nassert.strictEqual(IsDisplayed, true, \"Element is not displayed\");\n// back to current month \nawait driver.$(teacherFlowLocators.nextMonth).click();\nassert.strictEqual(IsDisplayed, true, \"Element is not displayed\");\nawait driver.$(teacherFlowLocators.nextMonth).click();\nassert.strictEqual(IsDisplayed, true, \"Element is not displayed\");\nawait driver.$(teacherFlowLocators.nextMonth).click();\nassert.strictEqual(IsDisplayed, true, \"Element is not displayed\");",
                  "err": {},
                  "uuid": "fdfb9aaf-f8ea-45e6-ba9b-5dbc22ec08b0",
                  "parentUUID": "3dafb43c-0405-4730-9d6f-d289b14327c8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TF_TC31_Verify able to see button for start asssesment for anynoumous students when grade 1 selected",
                  "fullTitle": "[Mentor Flow] Profile page test cases [Mentor Flow] Student listing page TF_TC31_Verify able to see button for start asssesment for anynoumous students when grade 1 selected",
                  "timedOut": false,
                  "duration": 10732,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.$(teacherFlowLocators.grade1Label).click();  \n//scroll up\n    await scrollUp(driver)\n    await scrollUp(driver)\n    await scrollUp(driver)\n    await scrollUp(driver)\n    await scrollUp(driver)\n// student name not in list ?\nconst studentNameNotInListText = await driver.$(teacherFlowLocators.studentNameNotInListTextElement)\nconst studentNameNotInListTextIsDisplayed = await studentNameNotInListText.isDisplayed();\nassert.strictEqual(studentNameNotInListTextIsDisplayed, true, \"Element is not displayed\");\nconst text = await studentNameNotInListText.getText();\nassert.strictEqual(\n  text,\n  constants.studentNameNotInListText,\n  `Element text is not ${constants.studentNameNotInListText}, it is '${text}'`\n);\n// start assessment for anynomous student button\nconst anynoumousStudentTakeAssessmentButton = await driver.$(teacherFlowLocators.anynoumousStudentTakeAssessmentButton)\nconst anynoumousStudentTakeAssessmentButtonIsDisplayed = await anynoumousStudentTakeAssessmentButton.isDisplayed();\nassert.strictEqual(anynoumousStudentTakeAssessmentButtonIsDisplayed, true, \"Element is not displayed\");\nconst anynoumousStudentTakeAssessmentButtonIsDisplayedText = await anynoumousStudentTakeAssessmentButton.getText();\nassert.strictEqual(\n  anynoumousStudentTakeAssessmentButtonIsDisplayedText,\n  constants.anynoumousStudentTakeAssessmentButtonText,\n  `Element text is not ${constants.anynoumousStudentTakeAssessmentButtonText}, it is '${anynoumousStudentTakeAssessmentButtonIsDisplayedText}'`\n);",
                  "err": {},
                  "uuid": "fb7a1f5c-e628-4db9-8ad9-4695c2122190",
                  "parentUUID": "3dafb43c-0405-4730-9d6f-d289b14327c8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TF_TC32_Verify able to see button for start asssesment for anynoumous students when grade 2 selected",
                  "fullTitle": "[Mentor Flow] Profile page test cases [Mentor Flow] Student listing page TF_TC32_Verify able to see button for start asssesment for anynoumous students when grade 2 selected",
                  "timedOut": false,
                  "duration": 9301,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.$(teacherFlowLocators.grade2Label).click(); \n //scroll up\n await scrollUp(driver)\n await scrollUp(driver)\n await scrollUp(driver)\n await scrollUp(driver)\n await scrollUp(driver)\n \n// student name not in list ?\nconst studentNameNotInListText = await driver.$(teacherFlowLocators.studentNameNotInListTextElement)\nconst studentNameNotInListTextIsDisplayed = await studentNameNotInListText.isDisplayed();\nassert.strictEqual(studentNameNotInListTextIsDisplayed, true, \"Element is not displayed\");\nconst text = await studentNameNotInListText.getText();\nassert.strictEqual(\n  text,\n  constants.studentNameNotInListText,\n  `Element text is not ${constants.studentNameNotInListText}, it is '${text}'`\n);\n// start assessment for anynomous student button\nconst anynoumousStudentTakeAssessmentButton = await driver.$(teacherFlowLocators.anynoumousStudentTakeAssessmentButton)\nconst anynoumousStudentTakeAssessmentButtonIsDisplayed = await anynoumousStudentTakeAssessmentButton.isDisplayed();\nassert.strictEqual(anynoumousStudentTakeAssessmentButtonIsDisplayed, true, \"Element is not displayed\");\nconst anynoumousStudentTakeAssessmentButtonIsDisplayedText = await anynoumousStudentTakeAssessmentButton.getText();\nassert.strictEqual(\n  anynoumousStudentTakeAssessmentButtonIsDisplayedText,\n  constants.anynoumousStudentTakeAssessmentButtonText,\n  `Element text is not ${constants.anynoumousStudentTakeAssessmentButtonText}, it is '${anynoumousStudentTakeAssessmentButtonIsDisplayedText}'`\n);",
                  "err": {},
                  "uuid": "424eb563-9932-4c78-963d-d536a8b96bb4",
                  "parentUUID": "3dafb43c-0405-4730-9d6f-d289b14327c8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TF_TC33_Verify able to see button for start asssesment for anynoumous students when grade 3 selected",
                  "fullTitle": "[Mentor Flow] Profile page test cases [Mentor Flow] Student listing page TF_TC33_Verify able to see button for start asssesment for anynoumous students when grade 3 selected",
                  "timedOut": false,
                  "duration": 10663,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.$(teacherFlowLocators.grade3Label).click(); \n//scroll up\nawait scrollUp(driver)\nawait scrollUp(driver)\nawait scrollUp(driver)\nawait scrollUp(driver)\nawait scrollUp(driver)   \nawait scrollUp(driver)\n// student name not in list ?\nconst studentNameNotInListText = await driver.$(teacherFlowLocators.studentNameNotInListTextElement)\nconst studentNameNotInListTextIsDisplayed = await studentNameNotInListText.isDisplayed();\nassert.strictEqual(studentNameNotInListTextIsDisplayed, true, \"Element is not displayed\");\nconst text = await studentNameNotInListText.getText();\nassert.strictEqual(\n  text,\n  constants.studentNameNotInListText,\n  `Element text is not ${constants.studentNameNotInListText}, it is '${text}'`\n);\n// start assessment for anynomous student button\nconst anynoumousStudentTakeAssessmentButton = await driver.$(teacherFlowLocators.anynoumousStudentTakeAssessmentButton)\nconst anynoumousStudentTakeAssessmentButtonIsDisplayed = await anynoumousStudentTakeAssessmentButton.isDisplayed();\nassert.strictEqual(anynoumousStudentTakeAssessmentButtonIsDisplayed, true, \"Element is not displayed\");\nconst anynoumousStudentTakeAssessmentButtonIsDisplayedText = await anynoumousStudentTakeAssessmentButton.getText();\nassert.strictEqual(\n  anynoumousStudentTakeAssessmentButtonIsDisplayedText,\n  constants.anynoumousStudentTakeAssessmentButtonText,\n  `Element text is not ${constants.anynoumousStudentTakeAssessmentButtonText}, it is '${anynoumousStudentTakeAssessmentButtonIsDisplayedText}'`\n);",
                  "err": {},
                  "uuid": "443e162b-e4e2-483c-bc3e-f7cd386c277f",
                  "parentUUID": "3dafb43c-0405-4730-9d6f-d289b14327c8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "TF_TC34_Verify in header able to see app version and akalan text",
                  "fullTitle": "[Mentor Flow] Profile page test cases [Mentor Flow] Student listing page TF_TC34_Verify in header able to see app version and akalan text",
                  "timedOut": false,
                  "duration": 300,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// app version in header\nconst appVersionInHeader = await driver.$(teacherFlowLocators.appVersionInHeader)\nconst appVersionInHeaderIsDisplayed = await appVersionInHeader.isDisplayed();\nassert.strictEqual(appVersionInHeaderIsDisplayed, true, \"Element is not displayed\");\nconst appVersionInHeaderText = await appVersionInHeader.getText();\nassert.strictEqual(\n  appVersionInHeaderText,\n  constants.appVersiontext,\n  `Element text is not ${constants.appVersiontext}, it is '${appVersionInHeaderText}'`\n);\n  // Akalan Text in header\n const akalanTextInHeader = await driver.$(teacherFlowLocators.akalanTextInHeaderElement)\n const akalanTextInHeaderIsDisplayed = await akalanTextInHeader.isDisplayed();\n assert.strictEqual(akalanTextInHeaderIsDisplayed, true, \"Element is not displayed\");\n const akalanText = await akalanTextInHeader.getText();\n assert.strictEqual(\n akalanText,\n constants.akalanText,\n`Element text is not ${constants.akalanText}, it is '${akalanText}'`\n  );",
                  "err": {},
                  "uuid": "1976f435-6812-4d0b-9d4d-7b40a8b81e5f",
                  "parentUUID": "3dafb43c-0405-4730-9d6f-d289b14327c8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "279cb304-5854-4337-92f4-68b1f3932299",
                "ba63eafe-b16e-4f6d-904c-623aa5c8a377",
                "9f750543-fd1c-481b-bf9d-9d54f19b4cea",
                "bdbf8230-5196-44c8-a01a-e681bf215650",
                "022981e3-a73a-4d4f-8338-0ff237c7a5d0",
                "c5abd4e5-edba-4de7-b95e-182b71fd98f7",
                "2d8f240f-4b78-4378-8e51-b685f16705a4",
                "871208e8-e320-47b9-a4e5-4510e66a6cf3",
                "97f03846-93a3-4371-ba3d-e7a36cf1562d",
                "4d769885-f0e7-42e7-a8a2-0915f70b13ba",
                "c44a608b-4cf0-4327-bf13-e0384ee72c24",
                "9df0ab5a-7f6f-4b00-9f38-80e17628b865",
                "3e90a8e8-581b-4eb0-8e4c-c357422e1940",
                "fdfb9aaf-f8ea-45e6-ba9b-5dbc22ec08b0",
                "fb7a1f5c-e628-4db9-8ad9-4695c2122190",
                "424eb563-9932-4c78-963d-d536a8b96bb4",
                "443e162b-e4e2-483c-bc3e-f7cd386c277f",
                "1976f435-6812-4d0b-9d4d-7b40a8b81e5f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 83461,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "5a90b977-789b-47c7-8c8a-0ec78bf98ef7",
              "title": "[Mentor Flow] Assessment flow grade 1",
              "fullFile": "C:\\Users\\Sandeep\\Desktop\\nisAndroid\\nisai-android-automation\\test\\mentorFlow.spec.js",
              "file": "\\test\\mentorFlow.spec.js",
              "beforeHooks": [],
              "afterHooks": [
                {
                  "title": "\"after all\" hook in \"[Mentor Flow] Assessment flow grade 1\"",
                  "fullTitle": "[Mentor Flow] Profile page test cases [Mentor Flow] Assessment flow grade 1 \"after all\" hook in \"[Mentor Flow] Assessment flow grade 1\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "if (driver) {\n  // await driver.$(teacherFlowLocators.studentAnklanPageBack).click();\n}",
                  "err": {},
                  "uuid": "3682090b-d7b3-420f-abb1-20855e3c7828",
                  "parentUUID": "5a90b977-789b-47c7-8c8a-0ec78bf98ef7",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "TF_TC35_Verify able take assessment for grade 1 student",
                  "fullTitle": "[Mentor Flow] Profile page test cases [Mentor Flow] Assessment flow grade 1 TF_TC35_Verify able take assessment for grade 1 student",
                  "timedOut": false,
                  "duration": 71919,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.$(teacherFlowLocators.grade1Label).click(); \nawait selectRandomStudent(driver);\nawait fillOdkForm(driver);\nawait driver.$(odkLocators.nextButtonBtwTwoForms).click();\nawait fillOdkForm(driver);\nawait driver.$(odkLocators.nextButtonBtwTwoForms).click();\nconst scoreboard = await driver.$(scoreBoard.scoreboared);\nconst isScoreBoardDisplayed = await scoreboard.isDisplayed();\nassert.strictEqual(isScoreBoardDisplayed, true, \"ScoreBoard not displayed\");\nconst studentAnklanPageBack = await driver.$(teacherFlowLocators.studentAnklanPageBack);\nconst studentAnklanPageBackDisplayed = await studentAnklanPageBack.isDisplayed();\nassert.strictEqual(studentAnklanPageBackDisplayed, true, \"Student Anklann page is not displayed\");\nawait driver.$(teacherFlowLocators.studentAnklanPageBack).click();",
                  "err": {},
                  "uuid": "33cbee3d-ab05-432b-aaa2-9dd762b01238",
                  "parentUUID": "5a90b977-789b-47c7-8c8a-0ec78bf98ef7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "33cbee3d-ab05-432b-aaa2-9dd762b01238"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 71919,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "cd9dd6df-060b-49d1-911b-96808867f161",
              "title": "[Mentor Flow] Assessment flow grade 2",
              "fullFile": "C:\\Users\\Sandeep\\Desktop\\nisAndroid\\nisai-android-automation\\test\\mentorFlow.spec.js",
              "file": "\\test\\mentorFlow.spec.js",
              "beforeHooks": [],
              "afterHooks": [
                {
                  "title": "\"after all\" hook in \"[Mentor Flow] Assessment flow grade 2\"",
                  "fullTitle": "[Mentor Flow] Profile page test cases [Mentor Flow] Assessment flow grade 2 \"after all\" hook in \"[Mentor Flow] Assessment flow grade 2\"",
                  "timedOut": false,
                  "duration": 1,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "if (driver) {\n  // await driver.$(teacherFlowLocators.studentListingToHomePageBackButton).click();\n}",
                  "err": {},
                  "uuid": "e5dcbf8b-92a5-4340-a442-2d9eb423bcfb",
                  "parentUUID": "cd9dd6df-060b-49d1-911b-96808867f161",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "TF_TC36_Verify able take assessment for grade 2 student",
                  "fullTitle": "[Mentor Flow] Profile page test cases [Mentor Flow] Assessment flow grade 2 TF_TC36_Verify able take assessment for grade 2 student",
                  "timedOut": false,
                  "duration": 81682,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await driver.$(teacherFlowLocators.grade2Label).click(); \nawait selectRandomStudent(driver);\nawait fillOdkForm(driver);\nawait driver.$(odkLocators.nextButtonBtwTwoForms).click();\nawait fillOdkForm(driver);\nawait driver.$(odkLocators.nextButtonBtwTwoForms).click();\nawait handleBsttFlow(driver);\nconst scoreboard = await driver.$(scoreBoard.scoreboared);\nconst isScoreBoardDisplayed = await scoreboard.isDisplayed();\nassert.strictEqual(isScoreBoardDisplayed, true, \"ScoreBoard not displayed\");\n// await driver.$(teacherFlowLocators.assessNextStudent).click();\n// verify after assessment comes on student listing page \n// const selectGradeElement = await driver.$(teacherFlowLocators.selectGradeTextElement);\n// const isDisplayed = await selectGradeElement.isDisplayed();\n// assert.strictEqual(isDisplayed, true, \"Element is not displayed\");\n// const text = await selectGradeElement.getText();\n// assert.strictEqual(\n//   text,\n//   constants.selectGradeText,\n//   `Element text is not ${constants.selectGradeText}, it is '${text}'`\n// );",
                  "err": {},
                  "uuid": "df7566f8-a6bb-4598-a3a3-792a26e799df",
                  "parentUUID": "cd9dd6df-060b-49d1-911b-96808867f161",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "df7566f8-a6bb-4598-a3a3-792a26e799df"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 81682,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [
            "14a465bb-2c6f-4ee9-ba02-14e628b09353",
            "dbe92065-528d-4450-a073-feb82f6d946d",
            "23cc9648-6ae3-4918-b6f5-7f8a58c159a3",
            "b78d48d0-fa79-42a7-8320-821a1cf697bc",
            "6baa6740-befd-43d4-8ce0-cbef675d10f4",
            "f7117bab-6d2a-4133-8bc3-dc4c75e8941f"
          ],
          "failures": [],
          "pending": [
            "39d20d7f-3215-4c53-ac07-4fa5d7ffaa71",
            "c8dd9f3a-3192-461e-b0c1-6f4ec8ba3e59",
            "839c5567-626b-4397-9a6a-c7ec3eb4ad03",
            "2322e54e-8ccb-4328-b02b-c8e5a7993fa6",
            "722d1424-8137-419f-8045-3e998b58551e",
            "86c38a48-440d-43b9-b501-b1f5e6707e73"
          ],
          "skipped": [],
          "duration": 7105,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "nl_test_report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportFilename": "nl_test_report"
      },
      "version": "6.2.0"
    }
  }
}